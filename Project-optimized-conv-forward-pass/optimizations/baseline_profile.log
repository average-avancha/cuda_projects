(base) neo@neo:~/ece408/ECE408$ rai -p ./Project/
Dynamic Rate Limit: 30s
✱ Checking your authentication credentials.
✱ Preparing your project directory for upload.
✱ Uploading your project directory. This may take a few minutes.
 34.76 KiB / 34.76 KiB ┃▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓┃ 100.00% 298.55 KiB/s 0s
✱ Folder uploaded. Server is now processing your submission.
✱ Your job request has been posted to the queue.
✱ Server has accepted your job submission and started to configure the container.
✱ Downloading your code.
✱ Using davidchencsl/ece408_minidnn_docker_fa23:latest as container image.
✱ Starting container.
✱ Do not profile when using the default queue (rai_amd64_ece408)
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-6567667fcb59602910b39dfd.tar.gz. The data will be present for only a short duration of time.
(base) neo@neo:~/ece408/ECE408$ rai --queue rai_amd64_exclusive -p ./Project/ 
Dynamic Rate Limit: 30s
✱ Checking your authentication credentials.
✱ Preparing your project directory for upload.
✱ Uploading your project directory. This may take a few minutes.
 34.76 KiB / 34.76 KiB ┃▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓┃ 100.00% 142.52 KiB/s 0s
✱ Folder uploaded. Server is now processing your submission.
✱ Your job request has been posted to the queue.
✱ Server has accepted your job submission and started to configure the container.
✱ Downloading your code.
✱ Using davidchencsl/ece408_minidnn_docker_fa23:latest as container image.
✱ Starting container.
✱ Running /bin/bash -c "mkdir /build/student_code && cp -rv /src/* /build/student_code"
'/src/README.md' -> '/build/student_code/README.md'
'/src/custom' -> '/build/student_code/custom'
'/src/custom/cpu-new-forward.cc' -> '/build/student_code/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/build/student_code/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/build/student_code/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/build/student_code/custom/new-forward.cu'
'/src/m1.cc' -> '/build/student_code/m1.cc'
'/src/m2.cc' -> '/build/student_code/m2.cc'
'/src/m3.cc' -> '/build/student_code/m3.cc'
'/src/m3_report_template.docx' -> '/build/student_code/m3_report_template.docx'
'/src/rai_build.yml' -> '/build/student_code/rai_build.yml'
✱ Running /bin/bash -c "cp /ece408/project/build/weights-86.bin /build"
✱ Running /bin/bash -c "cp -rv /src/custom/* /ece408/project/src/layer/custom"
'/src/custom/cpu-new-forward.cc' -> '/ece408/project/src/layer/custom/cpu-new-forward.cc'
'/src/custom/cpu-new-forward.h' -> '/ece408/project/src/layer/custom/cpu-new-forward.h'
'/src/custom/gpu-new-forward.h' -> '/ece408/project/src/layer/custom/gpu-new-forward.h'
'/src/custom/new-forward.cu' -> '/ece408/project/src/layer/custom/new-forward.cu'
✱ Running /bin/bash -c "cmake /ece408/project/ && make -j8"
-- The C compiler identification is GNU 7.5.0
-- The CXX compiler identification is GNU 7.5.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE
-- Found CUDA: /usr/local/cuda (found version "10.2")
-- Configuring done
-- Generating done
-- Build files have been written to: /build
[  3%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_gpu-utils.cu.o
Scanning dependencies of target ece408net
[  6%] Building NVCC (Device) object src/CMakeFiles/GpuConv.dir/layer/custom/GpuConv_generated_new-forward.cu.o
[ 10%] Building CXX object CMakeFiles/ece408net.dir/ece408net.cc.o
[ 13%] Linking CXX static library libece408net.a
[ 13%] Built target ece408net
Scanning dependencies of target GpuConv
[ 17%] Linking CXX static library libGpuConv.a
[ 17%] Built target GpuConv
Scanning dependencies of target MiniDNNLib
[ 20%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/mnist.cc.o
[ 24%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/network.cc.o
[ 27%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv.cc.o
[ 31%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/fully_connected.cc.o
[ 34%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/ave_pooling.cc.o
[ 37%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cust.cc.o
[ 41%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/conv_cpu.cc.o
[ 44%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/max_pooling.cc.o
[ 48%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/relu.cc.o
[ 51%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/sigmoid.cc.o
[ 55%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/softmax.cc.o
[ 58%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/cross_entropy_loss.cc.o
[ 62%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/loss/mse_loss.cc.o
[ 65%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/optimizer/sgd.cc.o
[ 68%] Building CXX object src/CMakeFiles/MiniDNNLib.dir/layer/custom/cpu-new-forward.cc.o
[ 72%] Linking CXX static library libMiniDNNLib.a
[ 72%] Built target MiniDNNLib
Scanning dependencies of target m3
Scanning dependencies of target final
Scanning dependencies of target m2
Scanning dependencies of target m1
[ 75%] Building CXX object CMakeFiles/m2.dir/m2.cc.o
[ 79%] Building CXX object CMakeFiles/m3.dir/m3.cc.o
[ 82%] Building CXX object CMakeFiles/final.dir/final.cc.o
[ 86%] Building CXX object CMakeFiles/m1.dir/m1.cc.o
[ 89%] Linking CXX executable m2
[ 93%] Linking CXX executable m1
[ 96%] Linking CXX executable m3
[100%] Linking CXX executable final
[100%] Built target m2
[100%] Built target m3
[100%] Built target m1
[100%] Built target final
✱ Running bash -c "cuda-memcheck ./m3 1000"   \\ Output will appear after run is complete.
========= CUDA-MEMCHECK
Running test case 1
B = 1 M = 3 C = 3 H = 224 W = 224 K = 3 S = 1
Running test case 2
B = 2 M = 3 C = 3 H = 301 W = 301 K = 3 S = 2
Running test case 3
B = 3 M = 3 C = 3 H = 196 W = 196 K = 3 S = 3
Running test case 4
B = 4 M = 3 C = 3 H = 239 W = 239 K = 3 S = 4
All test cases passed
Test batch size: 1000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 1830.19 ms
Op Time: 1765.54 ms
Conv-GPU==
Layer Time: 8059.6 ms
Op Time: 8013.4 ms

Test Accuracy: 0.886

========= ERROR SUMMARY: 0 errors
✱ Running bash -c "nsys profile --stats=true ./m3"   \\ Output will appear after run is complete.
**** collection configuration ****
        force-overwrite = false
        stop-on-exit = true
        export_sqlite = true
        stats = true
        capture-range = none
        stop-on-range-end = false
        Beta: ftrace events:
        ftrace-keep-user-config = false
        trace-GPU-context-switch = false
        delay = 0 seconds
        duration = 0 seconds
        kill = signal number 15
        inherit-environment = true
        show-output = true
        trace-fork-before-exec = false
        sample_cpu = true
        backtrace_method = LBR
        wait = all
        trace_cublas = false
        trace_cuda = true
        trace_cudnn = false
        trace_nvtx = true
        trace_mpi = false
        trace_openacc = false
        trace_vulkan = false
        trace_opengl = true
        trace_osrt = true
        osrt-threshold = 0 nanoseconds
        cudabacktrace = false
        cudabacktrace-threshold = 0 nanoseconds
        profile_processes = tree
        application command = ./m3
        application arguments = 
        application working directory = /build
        NVTX profiler range trigger = 
        NVTX profiler domain trigger = 
        environment variables:
        Collecting data...
Running test case 1
B = 1 M = 3 C = 3 H = 224 W = 224 K = 3 S = 1
Running test case 2
B = 2 M = 3 C = 3 H = 301 W = 301 K = 3 S = 2
Running test case 3
B = 3 M = 3 C = 3 H = 196 W = 196 K = 3 S = 3
Running test case 4
B = 4 M = 3 C = 3 H = 239 W = 239 K = 3 S = 4
All test cases passed
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
Layer Time: 333.496 ms
Op Time: 11.0134 ms
Conv-GPU==
Layer Time: 284.035 ms
Op Time: 54.035 ms

Test Accuracy: 0.871

        Generating the /build/report1.qdstrm file.
        Capturing raw events...
        335270 total events collected.
        Capturing symbol files...
        Saving diagnostics...
        Saving qdstrm file to disk...
        Finished saving file.


Importing the qdstrm file using /opt/nvidia/nsight-systems/2019.5.2/host-linux-x64/QdstrmImporter.

Importing...

Importing [==================================================100%]
Saving report to file "/build/report1.qdrep"
Report file saved.
Please discard the qdstrm file and use the qdrep file instead.

Removed /build/report1.qdstrm as it was successfully imported.
Please use the qdrep file instead.

Exporting the qdrep file to SQLite database using /opt/nvidia/nsight-systems/2019.5.2/host-linux-x64/nsys-exporter.

Exporting 335203 events:

0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

Exported successfully to
/build/report1.sqlite

Generating CUDA API Statistics...
CUDA API Statistics (nanoseconds)

Time(%)      Total Time       Calls         Average         Minimum         Maximum  Name                                                                            
-------  --------------  ----------  --------------  --------------  --------------  --------------------------------------------------------------------------------
   51.9       557912136          20      27895606.8           29183       296689839  cudaMemcpy                                                                      
   38.8       417380921          20      20869046.1            4452       368314780  cudaMalloc                                                                      
    6.1        65061414          10       6506141.4            3351        54004651  cudaDeviceSynchronize                                                           
    3.0        31735423          10       3173542.3           24504        31468737  cudaLaunchKernel                                                                
    0.3         3213641          20        160682.0            3238          710799  cudaFree                                                                        




Generating CUDA Kernel Statistics...

Generating CUDA Memory Operation Statistics...
CUDA Kernel Statistics (nanoseconds)

Time(%)      Total Time   Instances         Average         Minimum         Maximum  Name                                                                            
-------  --------------  ----------  --------------  --------------  --------------  --------------------------------------------------------------------------------
  100.0        65035738           6      10839289.7            9120        53998519  conv_forward_kernel                                                             
    0.0            2944           2          1472.0            1440            1504  do_not_remove_this_kernel                                                       
    0.0            2560           2          1280.0            1280            1280  prefn_marker_kernel                                                             


CUDA Memory Operation Statistics (nanoseconds)

Time(%)      Total Time  Operations         Average         Minimum         Maximum  Name                                                                            
-------  --------------  ----------  --------------  --------------  --------------  --------------------------------------------------------------------------------
   91.6       502133682           6      83688947.0           23456       295945475  [CUDA memcpy DtoH]                                                              
    8.4        46200163          14       3300011.6            1152        24012348  [CUDA memcpy HtoD]                                                              


CUDA Memory Operation Statistics (KiB)

            Total      Operations            Average            Minimum            Maximum  Name                                                                            
-----------------  --------------  -----------------  -----------------  -----------------  --------------------------------------------------------------------------------
         862672.0               6           143778.7            148.535           500000.0  [CUDA memcpy DtoH]                                                              
         276206.0              14            19729.0              0.004           144453.0  [CUDA memcpy HtoD]                                                              




Generating Operating System Runtime API Statistics...
Operating System Runtime API Statistics (nanoseconds)

Time(%)      Total Time       Calls         Average         Minimum         Maximum  Name                                                                            
-------  --------------  ----------  --------------  --------------  --------------  --------------------------------------------------------------------------------
   33.3     52355019647         538      97314162.9           28334       100442190  sem_timedwait                                                                   
   33.2     52197739579         536      97383842.5           39598       100249055  poll                                                                            
   22.0     34508197531          69     500118804.8       500008787       500241236  pthread_cond_timedwait                                                          
   11.3     17735658263           2    8867829131.5      4371091502     13364566761  pthread_cond_wait                                                               
    0.1       125905823        9428         13354.5            1042        17560261  read                                                                            
    0.1        85613293         946         90500.3            1023        17088110  ioctl                                                                           
    0.0         3207414          98         32728.7            1286         1113301  mmap                                                                            
    0.0         1212726         101         12007.2            5375           22763  open64                                                                          
    0.0          400100           5         80020.0           48551          115081  pthread_create                                                                  
    0.0          186134          19          9796.5            2559           24912  fopen64                                                                         
    0.0          183618           3         61206.0           58406           64607  fgets                                                                           
    0.0          161751          26          6221.2            1472           70539  fopen                                                                           
    0.0          112760          15          7517.3            4732           16797  fflush                                                                          
    0.0          104056          38          2738.3            1047            8007  fclose                                                                          
    0.0           99366          18          5520.3            1035           20618  munmap                                                                          
    0.0           61761          15          4117.4            2210            6630  write                                                                           
    0.0           34907           5          6981.4            5166            9609  open                                                                            
    0.0           16574           2          8287.0            8252            8322  socket                                                                          
    0.0           14811           2          7405.5            6915            7896  pthread_cond_signal                                                             
    0.0            9725           4          2431.3            1129            4909  fwrite                                                                          
    0.0            7940           7          1134.3            1015            1282  fcntl                                                                           
    0.0            7281           1          7281.0            7281            7281  connect                                                                         
    0.0            5493           1          5493.0            5493            5493  pipe2                                                                           
    0.0            2635           1          2635.0            2635            2635  bind                                                                            
    0.0            1958           1          1958.0            1958            1958  listen                                                                          




Generating NVTX Push-Pop Range Statistics...
NVTX Push-Pop Range Statistics (nanoseconds)
✱ Running bash -c "nv-nsight-cu-cli --section '.*' -o analysis_file ./m3"   \\ Output will appear after run is complete.
Running test case 1
B = 1 M = 3 C = 3 H = 224 W = 224 K = 3 S = 1
==PROF== Connected to process 712 (/build/m3)
==PROF== Profiling "conv_forward_kernel" - 1: 0%....50%....100% - 73 passes
Running test case 2
B = 2 M = 3 C = 3 H = 301 W = 301 K = 3 S = 2
==PROF== Profiling "conv_forward_kernel" - 2: 0%....50%....100% - 73 passes
Running test case 3
B = 3 M = 3 C = 3 H = 196 W = 196 K = 3 S = 3
==PROF== Profiling "conv_forward_kernel" - 3: 0%....50%....100% - 73 passes
Running test case 4
B = 4 M = 3 C = 3 H = 239 W = 239 K = 3 S = 4
==PROF== Profiling "conv_forward_kernel" - 4: 0%....50%....100% - 73 passes
All test cases passed
Test batch size: 5000
Loading fashion-mnist data...Done
Loading model...Done
Conv-GPU==
==PROF== Profiling "prefn_marker_kernel()" - 5: 0%....50%....100% - 73 passes
==PROF== Profiling "conv_forward_kernel" - 6: 0%....50%....100% - 74 passes
==PROF== Profiling "do_not_remove_this_kernel()" - 7: 0%....50%....100% - 73 passes
Layer Time: 7195.46 ms
Op Time: 6892.9 ms
Conv-GPU==
==PROF== Profiling "prefn_marker_kernel()" - 8: 0%....50%....100% - 73 passes
==PROF== Profiling "conv_forward_kernel" - 9: 0%....50%....100% - 74 passes
==PROF== Profiling "do_not_remove_this_kernel()" - 10: 0%....50%....100% - 73 passes
Layer Time: 24441.5 ms
Op Time: 24154.6 ms

Test Accuracy: 0.871

==PROF== Disconnected from process 712
==PROF== Report: /build/analysis_file.ncu-rep
✱ The build folder has been uploaded to http://s3.amazonaws.com/files.rai-project.com/userdata/build-65676788cb59602c80c73149.tar.gz. The data will be present for only a short duration of time.